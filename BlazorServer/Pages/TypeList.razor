@page "/typelist"
@inject TypeService TypeService
@inject NavigationManager Nav

<div class="d-flex justify-content-between align-items-center mb-3">
    <h3>Communication Types</h3>
    <button class="btn btn-success" @onclick="GoToAdd">
        + Add Type
    </button>
</div>

@if (_loading)
{
    <p><em>Loading...</em></p>
}
else if (!_types.Any())
{
    <div class="alert alert-info">No communication types found.</div>
}
else
{
    <table class="table table-dark table-striped">
        <thead>
            <tr>
                <th>Code</th>
                <th>Display Name</th>
                <th>Active</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var t in _types)
            {
                <tr>
                    <td>@t.TypeCode</td>
                    <td>@t.DisplayName</td>
                    <td>
                        @if (t.IsActive)
                        {
                            <span class="badge bg-success">Yes</span>
                        }
                        else
                        {
                            <span class="badge bg-secondary">No</span>
                        }
                    </td>
                    <td>
                        <button class="btn btn-sm btn-primary"
                                @onclick="() => GoToEdit(t.TypeCode)">
                            Edit
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<TypeDto> _types = new();
    private bool _loading;

    protected override async Task OnInitializedAsync()
    {
        _loading = true;
        _types = (await TypeService.GetAllAsync()).ToList();
        _loading = false;
    }

    private void GoToAdd() => Nav.NavigateTo("/typeadd");

    private void GoToEdit(string code) => Nav.NavigateTo($"/typeedit/{code}");
}
