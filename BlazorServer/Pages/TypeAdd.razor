@page "/typeadd"
@inject TypeService TypeService
@inject NavigationManager Nav

<h3>Add Communication Type</h3>

<EditForm Model="@_model" OnValidSubmit="HandleCreate">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label class="form-label">Type Code</label>
        <InputText @bind-Value="_model.TypeCode" class="form-control" />
    </div>

    <div class="mb-3">
        <label class="form-label">Display Name</label>
        <InputText @bind-Value="_model.DisplayName" class="form-control" />
    </div>

    <div class="d-flex justify-content-between">
        <button type="button"
                class="btn btn-secondary"
                @onclick="GoBack">
            ‚Üê Back
        </button>
        <button type="submit"
                class="btn btn-success"
                disabled="@(!IsValid)">
            Create
        </button>
    </div>
</EditForm>

@code {
    // mutable backing model
    private class TypeAddModel
    {
        public string TypeCode { get; set; } = "";
        public string DisplayName { get; set; } = "";
    }

    private TypeAddModel _model = new();
    private bool IsValid =>
        !string.IsNullOrWhiteSpace(_model.TypeCode) &&
        !string.IsNullOrWhiteSpace(_model.DisplayName);

    private async Task HandleCreate()
    {
        var dto = new TypeCreateDto(_model.TypeCode, _model.DisplayName);
        await TypeService.CreateAsync(dto);
        Nav.NavigateTo("/typelist");
    }

    private void GoBack() => Nav.NavigateTo("/typelist");
}
